{"version":3,"sources":["components/Header.js","components/BestSellersListOptions.js","components/BookItem.js","components/config.js","components/utilities.js","components/TopBooksList.js","components/Footer.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","BestSellersListOptions","error","this","props","nameButtons","listNames","map","name","index","key","concat","list_name_encoded","display_name","role","message","React","Component","BookItem","_ref","rank","title","author","description","image","url","src","alt","href","config","process","handleErrors","response","ok","Error","TopBooksList","state","topBooksByList","books","reviseTopBooksByList","data","isbnAndInfoUrl","Object","keys","isbn","slice","info_url","forEach","book","isbnObject","primary_isbn10","open_library_url","getOpenLibraryUrls","isbnNumbers","join","callOpenLibraryUrl","fetch","then","json","_this","setState","catch","_this2","listName","match","params","callNYTUrl","results","toLowerCase","split","word","toUpperCase","book_image","amazon_product_url","processTopBooksData","bookItems","components_BookItem","Fragment","Footer","App","getListNamesUrl","filter","list","includes","listObject","processedListNames","_this3","Header_Header","react_router","exact","path","render","BestSellersListOptions_BestSellersListOptions","component","components_Footer","ReactDOM","basename","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.07b3d75d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\nimport '../css/Header.css';\n\nexport default function Header() {\n    return (    \n        <header className=\"header\">\n            <Link to=\"/\" className=\"headline\">More Books, Please</Link>\n        </header>\n    );\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport '../css/BestSellersListOptions.css';\n\nexport default class BestSellersListOptions extends React.Component {\n\n    render() {\n\n        // Save error from state to error variable.\n        const {error} = this.props;\n        \n        const nameButtons = this.props.listNames.map((name, index) =>  \n            <button className=\"list-button\" key={index}>\n                <Link to={`/topBooks/${name.list_name_encoded}`}>\n                        {name.display_name}\n                </Link>\n            </button>\n        );\n            \n        return (\n            <section className=\"best-sellers-list-options\">\n                \n                {/* If there is an error, render it, otherwise 'display' empty string. */}\n                {error ? <p className='error' role='alert'>{error.message}</p> : ''}\n\n                <h2 className=\"subhead\">Find more food for your hungry little bookworms.</h2>\n                <p className=\"directions\">Choose from The New York Times Bestsellers Lists below\n                    to see the most recent best sellers in each children's book list.</p>\n                    {nameButtons}\n            </section>\n        );\n    } \n}\n","import React from 'react';\nimport '../css/BookItem.css';\n\nconst BookItem = ({rank, title, author, description, image, url}) => {\n    return (\n        <section className=\"book-card\">\n            <img className=\"book-cover\" src={image} alt={`${title} by ${author}`} />\n            <p className='book-details'>{`Number: ${rank}`}</p>\n            <p className='book-details'>{title}</p>\n            <p className='book-details'>{`By ${author}`}</p>\n            <p className='book-details'>{description}</p>\n            <a className='find-link' href={url}>Find this book</a>\n        </section>\n    );\n}\n\nexport default BookItem;","export default {\n    API_KEY_NYT: process.env.REACT_APP_API_KEY,\n    API_KEY_OPENLIBRARY: ''\n};","/**\n * Handle errors from api call.\n * @param response from api call\n * @return if response was resolved successfully, response\n * is returned; if response was rejected an error is thrown.\n */\nconst handleErrors = (response) => {\n    if (!response.ok) {\n      throw new Error (\"Something went wrong.\")\n    }\n    return response; \n};\n\n/**\n * Convert uppercase title to title case.\n * @param title from book information\n * @return title in titlecase\n */\nconst toTitleCase = (title) => {\n    let titleLowercase = title.toLowerCase();\n    const titleCaseArray = titleLowercase.split(\" \").map(word => \n            `${word[0].toUpperCase()}${word.slice(1)}`);\n    return titleCaseArray.join(\" \");\n};\n\nexport { handleErrors, toTitleCase };\n\n","import React from 'react';\nimport BookItem from './BookItem';\nimport config from './config';\nimport { handleErrors, toTitleCase } from './utilities.js'; \nimport '../css/TopBooksList.css';\n\nconst processTopBooksData = (data) => {\n        \n    const display_name = data.results.display_name;\n\n    const books = data.results.books.map(book => {\n        return {\n            rank: book.rank,\n            primary_isbn10: book.primary_isbn10,\n            description: book.description,\n            title: toTitleCase(book.title),\n            author: book.author,\n            book_image: book.book_image,\n            open_library_url: '',\n            amazon_product_url: book.amazon_product_url\n        }\n    });\n        \n    return {\n        display_name, \n        books\n    };\n}\n\n\n\nexport default class TopBooksList extends React.Component {\n    \n    state = {\n        topBooksByList: {\n            display_name: '',\n            books: []\n        },\n        error: null\n    }\n\n    reviseTopBooksByList = (data, topBooksByList) => {\n        \n        const isbnAndInfoUrl = Object.keys(data).map(key => {\n          return {\n            isbn: key.slice(5),\n            info_url: data[key].info_url\n          }\n        });\n            \n        topBooksByList.books.forEach(book => {\n            isbnAndInfoUrl.forEach(isbnObject => {\n              if (isbnObject.isbn === book.primary_isbn10) {\n                book.open_library_url = isbnObject.info_url;\n              } \n            });\n          });\n    \n        return topBooksByList;\n    }\n\n    // Get OpenLibrary urls, process data, add OpenLibrary urls to \n    // topBooksByList object and setState with this revised topBooksByList object.\n    getOpenLibraryUrls = (topBooksByList) => {\n        \n        const baseOpenLibraryUrl = 'https://openlibrary.org/api/books?bibkeys='\n    \n        const isbnNumbers = topBooksByList.books.map(book => \n            `ISBN:${book.primary_isbn10}`)\n            .join(',');\n    \n        const callOpenLibraryUrl = `${baseOpenLibraryUrl}${isbnNumbers}&format=json`;\n    \n        fetch(callOpenLibraryUrl)\n            .then(handleErrors)\n            .then(response => response.json())   \n            .then(data => this.reviseTopBooksByList(data, topBooksByList))\n            .then(topBooksByList => this.setState({topBooksByList}))\n            .catch(error => this.setState({error: error.message}))\n    }\n\n    componentDidMount() {\n        \n        // Get selected NTY best seller list data, process data into topBooksByList\n        // object, and pass that object to getOpenLibraryUrls function to call \n        // the OpenLibrary API (which will then update the topBooksByList object \n        // and setState for topBooksByList).\n        const listName = this.props.match.params.listName\n\n        const baseNYTUrl = 'https://api.nytimes.com/svc/books/v3/lists/current/';\n    \n        const callNYTUrl = `${baseNYTUrl}${listName}?api-key=${config.API_KEY_NYT}`;\n      \n        fetch(callNYTUrl)\n            .then(handleErrors)\n            .then(response => response.json())\n            .then(data => processTopBooksData(data) || data)\n            .then(topBooksByList => this.getOpenLibraryUrls(topBooksByList))\n            .catch(error => this.setState({ error }))\n    }\n\n    render() {\n\n        const {error} = this.state;\n\n        const bookItems = this.state.topBooksByList.books.map((book) => {\n            \n            return (\n                <BookItem \n                    key={book.rank}\n                    rank={book.rank}\n                    title={book.title}\n                    author={book.author}\n                    description={book.description}\n                    image={book.book_image}\n                    url={book.open_library_url === '' ? book.amazon_product_url : book.open_library_url}\n                />\n            )}\n        );\n        \n        return (\n            <> \n                {/* If there is an error, render it, otherwise 'display' an empty string. */}\n                {error ? <p className='error' role='alert'>{error.message}</p> : ''}\n\n                {this.state.topBooksByList.display_name === '' \n                    ? <p className='placeholder-text'>Gathering books...one moment please...</p>\n                \n                    : <section className=\"top-books\">\n                        <h2 className=\"subhead-top-books\">{this.state.topBooksByList.display_name}</h2>\n                        {bookItems}\n                    </section>}\n            </>\n        );\n    }\n}\n\n","import React from 'react';\nimport '../css/Footer.css';\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer-copy\"><a href=\"https://developer.nytimes.com\">Data provided by The New York Times</a></p>\n            <p className=\"footer-copy\"><a className=\"main-a-style\" href=\"https://openlibrary.org/\">Data provided by OpenLibrary</a></p>\n            <p className=\"footer-copy\"> &copy;2019 <a className=\"main-a-style\" href=\"mailto:pulchrit@gmail.com\">Melissa Lafranchise</a></p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport Header from './Header';\nimport BestSellersListOptions from './BestSellersListOptions';\nimport TopBooksList from './TopBooksList';\nimport Footer from './Footer';\nimport config from './config';\nimport { handleErrors } from './utilities.js';\nimport '../css/App.css';\n\nconst processListNamesData = (listNamesData) => {\n  const childrensListNames = listNamesData.filter(list =>\n    list.display_name.includes('Children'));\n  \n  const listNames = childrensListNames.map(listObject => {\n    return {\n      display_name: listObject.display_name, // just display_name? destructuring\n      list_name_encoded: listObject.list_name_encoded // just list_name_encoded? destructuring\n    }\n  });\n\n  return listNames;\n}\n\n\n\nexport default class App extends React.Component {\n  \n  state = {\n    listNames: [],\n    error: null\n  };\n\n  componentDidMount() {\n    \n    // Get listNames from NYT API to populate nav buttons\n    const getListNamesUrl = `https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=${config.API_KEY_NYT}`;\n    \n    fetch(getListNamesUrl)\n    .then(handleErrors)\n    .then(response => response.json())\n    .then(data => processListNamesData(data.results))\n    .then(processedListNames => this.setState({listNames: processedListNames}))\n    .catch(error => {this.setState({error: error.message});\n    })\n  }\n\n  render() {\n\n    return (\n      <main className=\"app\">\n\n        <Header />\n        \n        {/* Initial view route. Shows list of best seller lists. */}\n        <Route \n          exact\n          path=\"/\"\n          render={ () => \n            <BestSellersListOptions \n              listNames={this.state.listNames}\n              error={this.state.error}\n            />\n          }\n        />\n\n        {/* Book list view route. Shows top books for each list. */}\n        <Route \n          path=\"/topBooks/:listName\"\n          component={TopBooksList} \n        />\n      \n        <Footer />\n\n      </main> \n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/more-books-please\">\n        <App/> \n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}